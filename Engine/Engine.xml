<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Engine</name>
    </assembly>
    <members>
        <member name="T:Engine.Camera.Camera">
            <summary>
            Camera class.
            </summary>
        </member>
        <member name="P:Engine.Camera.Camera.CameraMatrix">
            <summary>
            Gets the camera matrix.
            </summary>
        </member>
        <member name="P:Engine.Camera.Camera.InvViewportMatrix">
            <summary>
            Gets the viewport matrix.
            </summary>
        </member>
        <member name="M:Engine.Camera.Camera.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Camera.Camera.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Camera.Camera.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Camera.Camera.Center">
            <summary>
            Gets or sets the camera center.
            </summary>
        </member>
        <member name="P:Engine.Camera.Camera.Rotation">
            <summary>
            Gets or sets the camera rotation.
            </summary>
        </member>
        <member name="P:Engine.Camera.Camera.Scale">
            <summary>
            Gets or sets the camera scale.
            </summary>
        </member>
        <member name="T:Engine.Camera.Transformation2d">
            <summary>
            Helper class for calculating transformations.
            </summary>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Combine(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4)">
            <summary>
            Calculates the combined transformation by first applying the applyToCoordinatesFirst and afterwards the applyToCoordinatesSecond to input points.
            </summary>
            <param name="applyToCoordinatesFirst">A transformation.</param>
            <param name="applyToCoordinatesSecond">A second transformation.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Combine(OpenTK.Mathematics.Matrix4[])">
            <summary>
            Calculates the combined transformation by applying each transformation to input points.
            </summary>
            <param name="transformations">an array of transformations.</param>
            <returns>A Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Rotation(System.Single)">
            <summary>
            Creates a 2d rotation transformation.
            </summary>
            <param name="angleRadiant">the angle to rotate in radiants.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Scale(System.Single,System.Single)">
            <summary>
            Create a 2d scale transformation.
            </summary>
            <param name="sx">x-scale factor.</param>
            <param name="sy">y-scale factor.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Scale(OpenTK.Mathematics.Vector2)">
            <summary>
            Create a 2d scale transformation.
            </summary>
            <param name="scale">the scale factors.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Scale(System.Single)">
            <summary>
            Create a 2d scale transformation.
            </summary>
            <param name="uniformScaleFactor">scale factor for x and y axis.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Translate(System.Single,System.Single)">
            <summary>
            Creates a 2d translation transform.
            </summary>
            <param name="tx">the translation factor in x-direction.</param>
            <param name="ty">the translation factor in y-direction.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Translate(OpenTK.Mathematics.Vector2)">
            <summary>
            Creates a 2d translation transform.
            </summary>
            <param name="translation">The translation vector.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.Transform(OpenTK.Mathematics.Vector2,OpenTK.Mathematics.Matrix4)">
            <summary>
            Transform the given input location vector by the given transformation.
            </summary>
            <param name="input">input vector to transform.</param>
            <param name="transformation">the transformation to apply.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="M:Engine.Camera.Transformation2d.TransformDirection(OpenTK.Mathematics.Vector2,OpenTK.Mathematics.Matrix4)">
            <summary>
            Transform the given input direction vector by the given transformation.
            </summary>
            <param name="input">input vector to transform.</param>
            <param name="transformation">the transformation to apply.</param>
            <returns>Matrix.</returns>
        </member>
        <member name="T:Engine.Component.CollisionResponse">
            <summary>
            Interface that Components must implemen, in order to get info about with what they collid.
            </summary>
        </member>
        <member name="T:Engine.Component.Component">
            <summary>
            The base class for components in GameObjects.
            </summary>
        </member>
        <member name="P:Engine.Component.Component.GameObject">
            <summary>
            Gets the GameObject the component is in.
            </summary>
        </member>
        <member name="M:Engine.Component.Component.OnCreated">
            <summary>
            Called if the GameObject is created.
            </summary>
        </member>
        <member name="M:Engine.Component.Component.OnUpdate(System.Single)">
            <summary>
            Called every gametick.
            </summary>
            <param name="frameTime">Time between the frame.</param>
        </member>
        <member name="M:Engine.Component.Component.OnDestroy">
            <summary>
            Called if the GameObject is destroyed.
            </summary>
        </member>
        <member name="M:Engine.Component.Component.SetGameObject(Engine.GameObject.GameObject)">
            <summary>
            The internal function to set the parent.
            </summary>
            <param name="gameObject">The parent GameObject.</param>
        </member>
        <member name="M:Engine.Component.Component.GetGameObject">
            <summary>
            Gets the GameObject.
            </summary>
            <returns>the parent GameObject.</returns>
        </member>
        <member name="M:Engine.Component.Component.Dispose">
            <summary>
            Yeet this away.
            </summary>
        </member>
        <member name="T:Engine.Component.DoDamageCollisionResponse">
            <summary>
            A Kind of Collider, that Checks, if it Intersects with anything in Engine.Colliders. If yes it will deal DMG, if there is an HP Component.
            But it wont deal DMG to the GameObject it belongs to.
            </summary>
        </member>
        <member name="M:Engine.Component.DoDamageCollisionResponse.#ctor(System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Component.DoDamageCollisionResponse"/> class.
            </summary>
            <param name="dmg">How Much DMG it will deal on Contact.</param>
            <param name="dmgCD">How long before this can deal dmg again.</param>
        </member>
        <member name="M:Engine.Component.DoDamageCollisionResponse.GetIsCollided">
            <summary>
            Returns, if the DMG Collider already collided once. Usefull for bullets.
            </summary>
            <returns>If we allready Collided with something.</returns>
        </member>
        <member name="M:Engine.Component.DoDamageCollisionResponse.GetDidDMGthisFrame">
            <summary>
            Get if this did dmg this frame.
            </summary>
            <returns>True if this did dmg this frame.</returns>
        </member>
        <member name="M:Engine.Component.DoDamageCollisionResponse.GetDidDmgToThose">
            <summary>
            Get a List of GameObject we did DMG on those.
            </summary>
            <returns>A List with GameObjects we did DMG on.</returns>
        </member>
        <member name="M:Engine.Component.DoDamageCollisionResponse.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Component.DoDamageWithKnockbackCollisionResponse">
            <summary>
            DoDamageWithKnockbackCollisionResponse.
            </summary>
        </member>
        <member name="M:Engine.Component.DoDamageWithKnockbackCollisionResponse.#ctor(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Component.DoDamageWithKnockbackCollisionResponse"/> class.
            </summary>
            <param name="dmg">How much DMG is dealed on hit.</param>
            <param name="dmgCD">How long we have to wait, to do dmg again.</param>
            <param name="knockbackX">X Velocity to add for knockback ( will be inverted, if we yeet to the left ).</param>
            <param name="knockbackY">Y Velocity to add for knockback ( Will not be inverted).</param>
        </member>
        <member name="M:Engine.Component.DoDamageWithKnockbackCollisionResponse.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Component.HealthPoints">
            <summary>
            Gives HP to the Player or an Enemy. To Take DMG the GameObjects needs to be in Engine.Colliders.
            </summary>
        </member>
        <member name="M:Engine.Component.HealthPoints.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Component.HealthPoints"/> class.
            </summary>
            <param name="maxHP">MaxHP mus be creater then currHP.</param>
            <param name="currHP">CurrHP must be less then maxHP, else CurrHP = maxHP.</param>
        </member>
        <member name="M:Engine.Component.HealthPoints.GetMaxHP">
            <summary>
            Get the MaxHP.
            </summary>
            <returns>The MaxhHP.</returns>
        </member>
        <member name="M:Engine.Component.HealthPoints.GetCurrHP">
            <summary>
            Get the currentHP.
            </summary>
            <returns>The currenHP.</returns>
        </member>
        <member name="M:Engine.Component.HealthPoints.GetIsDeadFlag">
            <summary>
            Get the isDeadFlag.
            </summary>
            <returns>The isDeadFlag.</returns>
        </member>
        <member name="M:Engine.Component.HealthPoints.SetMaxHP(System.Int32)">
            <summary>
            Set the maxHP to a new value.
            </summary>
            <param name="maxHP">New maxHP.</param>
            <returns>The isDead Flag.</returns>
        </member>
        <member name="M:Engine.Component.HealthPoints.SetHP(System.Int32)">
            <summary>
            Set HP to new Value.
            </summary>
            <param name="hp">New HP value.</param>
            <returns>The isDeadFlag.</returns>
        </member>
        <member name="M:Engine.Component.HealthPoints.AddHP(System.Int32)">
            <summary>
            Add HP.
            </summary>
            <param name="hp">HP to be added.</param>
            <returns>The isDeadFlag.</returns>
        </member>
        <member name="M:Engine.Component.HealthPoints.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Component.Physics">
            <summary>
            The physics component.
            </summary>
        </member>
        <member name="F:Engine.Component.Physics.velocity">
            <summary>
            Gets or sets The Velocity at wich the Object will move OnUpdate.
            </summary>
        </member>
        <member name="F:Engine.Component.Physics.maxVelocity">
            <summary>
            Gets or sets The Max Velocity at wich the Object will move OnUpdate.
            </summary>
        </member>
        <member name="F:Engine.Component.Physics.gravity">
            <summary>
            The Gravity ( How much an Object gets pulled down ).
            </summary>
        </member>
        <member name="F:Engine.Component.Physics.isAffectedByGravity">
            <summary>
            If the Object should get Gravity.
            </summary>
        </member>
        <member name="F:Engine.Component.Physics.gravityMultiplier">
            <summary>
            How often should Gravity be added to accelerate teh Drop. When Velocity.
            </summary>
        </member>
        <member name="M:Engine.Component.Physics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Component.Physics"/> class, with default values.
            </summary>
        </member>
        <member name="M:Engine.Component.Physics.AddVelocityX(System.Single)">
            <summary>
            Add to the x Velocity.
            </summary>
            <param name="x">How much to add.</param>
        </member>
        <member name="M:Engine.Component.Physics.AddVelocitY(System.Single)">
            <summary>
            Add to the y Velocity.
            </summary>
            <param name="y">How much to add.</param>
        </member>
        <member name="M:Engine.Component.Physics.SetGravity(System.Single)">
            <summary>
            Set the Gravity.
            </summary>
            <param name="gravity">The paramref name="gravity". Normally a value.</param>
        </member>
        <member name="M:Engine.Component.Physics.SetIsAffectedByGravity(System.Boolean)">
            <summary>
            Set if the Object should get Gravity.
            </summary>
            <param name="isAffectedByGravity">Yes or no.</param>
        </member>
        <member name="M:Engine.Component.Physics.SetGravityMultiplier(System.Single)">
            <summary>
            Set how much gravity should be added when to accelert the drop.
            </summary>
            <param name="multi"> how much gravity should be added when to accelert the drop.</param>
        </member>
        <member name="M:Engine.Component.Physics.SetVelocity(System.Single,System.Single)">
            <summary>
            Set the curretn Velocity.
            </summary>
            <param name="x">X Part of the Velocity Vector.</param>
            <param name="y">Y Part of the Velocity Vector.</param>
        </member>
        <member name="M:Engine.Component.Physics.GetVelocity">
            <summary>
            Get the Current Velocity.
            </summary>
            <returns>The Current Velocity.</returns>
        </member>
        <member name="M:Engine.Component.Physics.SetMaxVelocity(System.Single,System.Single)">
            <summary>
            Set the MaxVelocity.
            </summary>
            <param name="x">X Part of the MaxVelocity Vector.</param>
            <param name="y">Y Part of the MaxVelocity Vector.</param>
        </member>
        <member name="M:Engine.Component.Physics.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Component.Physics.UpdateForService(System.Single)">
            <summary>
            Update which get called by the PhysicsService, to move this GameObject.
            </summary>
            <param name="frameTime">Time pased since last Frame.</param>
        </member>
        <member name="T:Engine.Component.UndoOverlapCollisionResponse">
            <summary>
            Adds a Collider to a GameObject that undoes overlaps with other Colliders.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.Up">
            <summary>
            0 = Up in distance array.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.Down">
            <summary>
            1 = Down in distance array.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.Left">
            <summary>
            2 = Down in distance array.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.Right">
            <summary>
            3 = Down in distance array.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.X">
            <summary>
            Const for X Axsis.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.Y">
            <summary>
            Const for Y Axsis.
            </summary>
        </member>
        <member name="F:Engine.Component.UndoOverlapCollisionResponse.touchedGround">
            <summary>
            Flag is set, when Groud was touched, needed for player jump reset.
            </summary>
        </member>
        <member name="M:Engine.Component.UndoOverlapCollisionResponse.GetGroundTouchedFlag">
            <summary>
            Get the Flag, if ground was touched on a collsion.
            </summary>
            <returns>The Flag if ground was touced.</returns>
        </member>
        <member name="M:Engine.Component.UndoOverlapCollisionResponse.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Engine">
            <summary>
            The Engine instance to bind with OpenGL.
            </summary>
            <summary>
            The Engine instance to bind with OpenGL.
            </summary>
            <summary>
            The Engine instance to bind with OpenGL.
            </summary>
            <summary>
            The Engine instance to bind with OpenGL.
            </summary>
        </member>
        <member name="P:Engine.Engine.Colliders">
            <summary>
            Gets a list of the colliders in the game.
            </summary>
        </member>
        <member name="P:Engine.Engine.GameWindow">
            <summary>
            Gets the GameWindow the Engine runs on.
            </summary>
        </member>
        <member name="P:Engine.Engine.Camera">
            <summary>
            Gets the game Camera.
            </summary>
        </member>
        <member name="M:Engine.Engine.StartEngine(OpenTK.Windowing.Desktop.GameWindow)">
            <summary>
            Start the engine ticks.
            </summary>
            <param name="window">The GameWindow the engine will be run on.</param>
        </member>
        <member name="P:Engine.Engine.GameObjects">
            <summary>
            Gets a list of GameObjects in the game.
            </summary>
        </member>
        <member name="M:Engine.Engine.AddGameObject(Engine.GameObject.GameObject)">
            <summary>
            Adds an GameObject to the list.
            </summary>
            <param name="gameObject">The GameObject to add.</param>
        </member>
        <member name="M:Engine.Engine.RemoveGameObject(Engine.GameObject.GameObject)">
            <summary>
            Removes an GameObject from the World and Calls it OnDestroy() func.
            Also checks if there are Colliders from it and delets it.
            </summary>
            <param name="gameObject">The GameObject to Destroy.</param>
        </member>
        <member name="P:Engine.Engine.Renderers">
            <summary>
            Gets the renderers.
            </summary>
        </member>
        <member name="M:Engine.Engine.AddRenderer(Engine.Renderer.IRenderer,Engine.Renderer.RenderLayer)">
            <summary>
            Adds an renderer to the list.
            </summary>
            <param name="renderer">The renderer to add.</param>
            <param name="layer">The render order.</param>
        </member>
        <member name="M:Engine.Engine.RemoveRenderer(Engine.Renderer.IRenderer,Engine.Renderer.RenderLayer)">
            <summary>
            Removes an rendere.
            </summary>
            <param name="renderer">The rendere to Remove.</param>
            <param name="layer">Render layer.</param>
        </member>
        <member name="P:Engine.Engine.Services">
            <summary>
            Gets the services.
            </summary>
        </member>
        <member name="M:Engine.Engine.AddService(Engine.Service.IService)">
            <summary>
            Adds an service to the engine.
            </summary>
            <param name="service">the service.</param>
        </member>
        <member name="M:Engine.Engine.GetService(System.String)">
            <summary>
            Gets a service by name.
            </summary>
            <param name="key">the name.</param>
            <returns>the service.</returns>
        </member>
        <member name="M:Engine.Engine.GetService``1">
            <summary>
            Gets service by type.
            </summary>
            <typeparam name="T">the type.</typeparam>
            <returns>the service.</returns>
        </member>
        <member name="T:Engine.GameObject.GameObject">
            <summary>
            The GameObject class which active game elements are deriving from.
            </summary>
        </member>
        <member name="F:Engine.GameObject.GameObject.sprite">
            <summary>
            The sprite the GameObject is drawn with.
            </summary>
        </member>
        <member name="M:Engine.GameObject.GameObject.#ctor(System.Single,System.Single,System.Single,System.Single,Engine.Renderer.Sprite.ISprite)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.GameObject.GameObject"/> class.
            </summary>
            <param name="minX">the X-Coordinate of bottom left point, of the GameObject.</param>
            <param name="minY">the Y-Coordinate of bottom left point, of the GameObject.</param>
            <param name="sizeX">the width of the GameObject.</param>
            <param name="sizeY">the height of the GameObject.</param>
            /// <param name="sprite">The sprite.</param>
        </member>
        <member name="P:Engine.GameObject.GameObject.SizeX">
            <summary>
            Gets the width of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.SizeY">
            <summary>
            Gets the hieght of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.MaxX">
            <summary>
            Gets the X-Coordinate of the top right point, of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.MaxY">
            <summary>
            Gets the Y-Coordinate of the top right point, of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.MinX">
            <summary>
            Gets or sets the X-Coordinate of bottom left point, of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.MinY">
            <summary>
            Gets or sets the Y-Coordinate of bottom left point, of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.Components">
            <summary>
            Gets or sets the Components.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.Sprite">
            <summary>
            Gets or sets the Sprite of the GameObject.
            </summary>
        </member>
        <member name="P:Engine.GameObject.GameObject.Mirrored">
            <inheritdoc/>
        </member>
        <member name="P:Engine.GameObject.GameObject.SpriteRenderer">
            <summary>
            Gets or sets the Sprite renderer.
            </summary>
        </member>
        <member name="M:Engine.GameObject.GameObject.Intersects(Engine.GameObject.IRectangle)">
            <summary>
            Checks if the other element intersects with this GameObject.
            </summary>
            <param name="rectangle">The other element to check at.</param>
            <returns>the value if the other element intersects with the gameobject.</returns>
        </member>
        <member name="M:Engine.GameObject.GameObject.AddComponent(Engine.GameObject.IComponent)">
            <summary>
            Adds a component from the GameObject.
            </summary>
            <param name="component">The component to add.</param>
        </member>
        <member name="M:Engine.GameObject.GameObject.RemoveComponent(Engine.GameObject.IComponent)">
            <summary>
            Removes a component from the GameObject.
            </summary>
            <param name="component">The component to remove.</param>
        </member>
        <member name="M:Engine.GameObject.GameObject.GetComponent``1">
            <summary>
            Gets the component from the GameObject.
            </summary>
            <typeparam name="T">Component.</typeparam>
            <returns>The component or null if not existant.</returns>
        </member>
        <member name="M:Engine.GameObject.GameObject.GetComponents">
            <summary>
            Get all components.
            </summary>
            <returns>All Componts of this GameObject, as a List.</returns>
        </member>
        <member name="M:Engine.GameObject.GameObject.OnUpdatableCreate">
            <summary>
            Called if the GameObject is created.
            </summary>
        </member>
        <member name="M:Engine.GameObject.GameObject.OnUpdate(System.Single)">
            <summary>
            Called every gametick.
            </summary>
            <param name="frameTime">Time between the frame.</param>
        </member>
        <member name="M:Engine.GameObject.GameObject.OnUpdatableDestroy">
            <summary>
            Called if the GameObject is destroyed.
            </summary>
        </member>
        <member name="T:Engine.GameObject.IComponent">
            <summary>
            Interface for GameObjects, to use Components.
            </summary>
        </member>
        <member name="M:Engine.GameObject.IComponent.SetGameObject(Engine.GameObject.GameObject)">
            <summary>
            The internal function to set the parent.
            </summary>
            <param name="gameObject">The parent GameObject.</param>
        </member>
        <member name="M:Engine.GameObject.IComponent.OnCreated">
            <summary>
            Called if the GameObject is created.
            </summary>
        </member>
        <member name="M:Engine.GameObject.IComponent.OnUpdate(System.Single)">
            <summary>
            Called every gametick.
            </summary>
            <param name="frameTime">Time between the frame.</param>
        </member>
        <member name="M:Engine.GameObject.IComponent.OnDestroy">
            <summary>
            Called if the GameObject is destroyed.
            </summary>
        </member>
        <member name="T:Engine.GameObject.IMirrorable">
            <summary>
            IMirrorable class.
            </summary>
        </member>
        <member name="P:Engine.GameObject.IMirrorable.Mirrored">
            <summary>
            Gets or sets a value indicating whether gets or sets if mirrored.
            </summary>
        </member>
        <member name="T:Engine.GameObject.IRectangle">
            <summary>
            Rectangle definde with 2 points.
            </summary>
        </member>
        <member name="P:Engine.GameObject.IRectangle.MinX">
            <summary>
            Gets or sets X-Coordinate of the left bottom point, of the Rectangle.
            </summary>
        </member>
        <member name="P:Engine.GameObject.IRectangle.MinY">
            <summary>
            Gets or sets Y-Coordinate of the left bottom point, of the Rectangle.
            </summary>
        </member>
        <member name="P:Engine.GameObject.IRectangle.MaxX">
            <summary>
            Gets the X-Coordinate of the top right point, of the Rectangle.
            </summary>
        </member>
        <member name="P:Engine.GameObject.IRectangle.MaxY">
            <summary>
            Gets the X-Coordinate of the top right point, of the Rectangle.
            </summary>
        </member>
        <member name="T:Engine.GameObject.IUpdatable">
            <summary>
            IUpdatable class.
            </summary>
        </member>
        <member name="M:Engine.GameObject.IUpdatable.OnUpdate(System.Single)">
            <summary>
            Called every tick.
            </summary>
            <param name="frameTime">Time between the frame.</param>
        </member>
        <member name="M:Engine.GameObject.IUpdatable.OnUpdatableDestroy">
            <summary>
            Called if created.
            </summary>
        </member>
        <member name="M:Engine.GameObject.IUpdatable.OnUpdatableCreate">
            <summary>
            Called if destroyed.
            </summary>
        </member>
        <member name="T:Engine.GameObject.Rectangle">
            <summary>
            Rectangle class.
            </summary>
        </member>
        <member name="M:Engine.GameObject.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.GameObject.Rectangle"/> class.
            </summary>
            <param name="minX">the X-Coordinate of bottom left point, of the GameObject.</param>
            <param name="minY">the Y-Coordinate of bottom left point, of the GameObject.</param>
            <param name="sizeX">the width of the GameObject.</param>
            <param name="sizeY">the height of the GameObject.</param>
        </member>
        <member name="P:Engine.GameObject.Rectangle.SizeX">
            <summary>
            Gets the width of the Rectangle.
            </summary>
        </member>
        <member name="P:Engine.GameObject.Rectangle.SizeY">
            <summary>
            Gets the height of the Rectangle.
            </summary>
        </member>
        <member name="P:Engine.GameObject.Rectangle.MaxX">
            <summary>
            Gets the X-Coordinate of the top right point.
            </summary>
        </member>
        <member name="P:Engine.GameObject.Rectangle.MaxY">
            <summary>
            Gets the Y-Coordinate of the top right point.
            </summary>
        </member>
        <member name="P:Engine.GameObject.Rectangle.MinX">
            <summary>
            Gets or sets the X-Coordinate of bottom left point.
            </summary>
        </member>
        <member name="P:Engine.GameObject.Rectangle.MinY">
            <summary>
            Gets or sets the Y-Coordinate of bottom left point.
            </summary>
        </member>
        <member name="P:Engine.GameObject.Rectangle.Mirrored">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.CollisionRenderer">
            <summary>
            The collision renderer class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.CollisionRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.CollisionRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.CollisionRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.DebugRenderer">
            <summary>
            Debug renderer class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.DebugRenderer.#ctor(Engine.GameObject.Rectangle,OpenTK.Mathematics.Color4,Engine.Renderer.Text.Font,Engine.GameObject.GameObject,Engine.Renderer.UI.UiAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.DebugRenderer"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="gameObject">Gameobject with physics component.</param>
            <param name="alignment">Alignment.</param>
        </member>
        <member name="M:Engine.Renderer.DebugRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.DebugRenderer.OnRender(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.RenderLayer">
            <summary>
            Rendering layers.
            </summary>
        </member>
        <member name="F:Engine.Renderer.RenderLayer.GAME">
            <summary>
            Game Elements.
            </summary>
        </member>
        <member name="F:Engine.Renderer.RenderLayer.PARTICLE">
            <summary>
            Particles.
            </summary>
        </member>
        <member name="F:Engine.Renderer.RenderLayer.UI">
            <summary>
            UI elements.
            </summary>
        </member>
        <member name="T:Engine.Renderer.IRenderer">
            <summary>
            Renderer base class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.IRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <summary>
            The render function.
            </summary>
            <param name="args">Render update arguments.</param>
        </member>
        <member name="M:Engine.Renderer.IRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <summary>
            The resize function.
            </summary>
            <param name="args">resize arguments.</param>
        </member>
        <member name="M:Engine.Renderer.IRenderer.OnRendererCreate">
            <summary>
            Run when the renderer is added.
            </summary>
        </member>
        <member name="T:Engine.Renderer.Particle.Particle">
            <summary>
            The particle struct.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Particle.Particle.#ctor(System.Single,OpenTK.Mathematics.Vector2,Engine.GameObject.IRectangle,Engine.Renderer.Sprite.ISprite,OpenTK.Mathematics.Color4)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Particle.Particle"/> class.
            </summary>
            <param name="lifetime">Lifetime of particle.</param>
            <param name="velocity">Velocity of particle.</param>
            <param name="bounds">Bounds of particle.</param>
            <param name="sprite">Sprite of particle.</param>
            <param name="color">Color of the particle.</param>
        </member>
        <member name="P:Engine.Renderer.Particle.Particle.Lived">
            <summary>
            Gets or sets the time already lived.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.Particle.Lifetime">
            <summary>
            Gets or sets the lifetime
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.Particle.Velocity">
            <summary>
            Gets or sets the velocity.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.Particle.Bounds">
            <summary>
            Gets or sets the bounds
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.Particle.Sprite">
            <summary>
            Gets or sets the Sprite.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.Particle.Color">
            <summary>
            Gets or sets the Color.
            </summary>
        </member>
        <member name="T:Engine.Renderer.Particle.ParticleEmitter">
            <summary>
            Particle emitter class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Particle.ParticleEmitter.#ctor(System.Single,System.Single,System.UInt32,System.UInt32,OpenTK.Mathematics.Vector2,OpenTK.Mathematics.Vector2,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Particle.ParticleEmitter"/> class.
            </summary>
            <param name="particleLifetimeMin">min lifetime.</param>
            <param name="particleLifetimeMax">max lifetime.</param>
            <param name="spawnAmountMin">spawn min.</param>
            <param name="spawnAmountMax">spawn max.</param>
            <param name="velocityMin">vel min.</param>
            <param name="velocityMax">vel max.</param>
            <param name="spawnCooldown">cooldown.</param>
            <param name="particleSizeMin">Size min.</param>
            <param name="particleSizeMax">Size max.</param>
            <param name="gravity">Gravity in y axis.</param>
        </member>
        <member name="M:Engine.Renderer.Particle.ParticleEmitter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Particle.ParticleEmitter"/> class.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.Sprites">
            <summary>
            Gets or sets the Sprites to use.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.Colours">
            <summary>
            Gets or sets the colours to use.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.ParticleLifetimeMin">
            <summary>
            Gets or sets the min lifetime of the particle.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.ParticleLifetimeMax">
            <summary>
            Gets or sets the max lifetime of the particle.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.Gravity">
            <summary>
            Gets or sets the gravity in y axis.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.VelocityMin">
            <summary>
            Gets or sets the min velocity.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.VelocityMax">
            <summary>
            Gets or sets the max velocity.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.SpawnCooldown">
            <summary>
            Gets or sets the cooldown between Particle spawns.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.SpawnAmountMin">
            <summary>
            Gets or sets the min spawn amount.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.SpawnAmountMax">
            <summary>
            Gets or sets the max spawn amount.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.ParticleSizeMin">
            <summary>
            Gets or sets the particle size min.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitter.ParticleSizeMax">
            <summary>
            Gets or sets the particle size max.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Particle.ParticleEmitter.GetRandomSprite">
            <summary>
            Gets an random sprite from the list.
            </summary>
            <returns>Random sprite.</returns>
        </member>
        <member name="M:Engine.Renderer.Particle.ParticleEmitter.GetRandomColour">
            <summary>
            Gets a random colour from the list or defaults to white.
            </summary>
            <returns>Random color.</returns>
        </member>
        <member name="M:Engine.Renderer.Particle.ParticleEmitter.NewParticle(Engine.GameObject.IRectangle)">
            <summary>
            Generates a new particle.
            </summary>
            <param name="position">Position of the spawn point</param>
            <returns>new Particle.</returns>
        </member>
        <member name="T:Engine.Renderer.Particle.ParticleEmitterData">
            <summary>
            Data class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Particle.ParticleEmitterData.#ctor(Engine.GameObject.IRectangle,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Particle.ParticleEmitterData"/> class.
            </summary>
            <param name="position">Position.</param>
            <param name="emitterLifetime">Lifetime of the emitter.</param>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitterData.Particles">
            <summary>
            Gets or sets the list of particles.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitterData.EmitterLifetime">
            <summary>
            Gets or sets the Emitter lifetime.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitterData.EmitterLived">
            <summary>
            Gets or sets the lived time.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitterData.EmitterCooldown">
            <summary>
            Gets or sets the cooldown.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Particle.ParticleEmitterData.Position">
            <summary>
            Gets or sets position.
            </summary>
        </member>
        <member name="T:Engine.Renderer.Sprite.AnimatedSprite">
            <summary>
            Animated sprite class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.AnimatedSprite.#ctor(Engine.Renderer.Tile.ITilesheet,Engine.Renderer.Sprite.Keyframe[])">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Sprite.AnimatedSprite"/> class.
            </summary>
            <param name="tilesheet">The tilesheet.</param>
            <param name="keyframes">Keyframes.</param>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.Handle">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.Width">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.Height">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.TexX0">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.TexX1">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.TexY0">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.TexY1">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.Color">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.State">
            <summary>
            Gets the current state of the animation.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.Paused">
            <summary>
            Gets or sets a value indicating whether gets or sets if paused.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.AnimatedSprite.Item(System.Int32)">
            <summary>
            Reference to this.
            </summary>
            <param name="keyframe">The keyframe.</param>
        </member>
        <member name="M:Engine.Renderer.Sprite.AnimatedSprite.TimeElapsed(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Sprite.AnimatedSprite.SetState(System.Int32)">
            <summary>
            Sets the animation state.
            </summary>
            <param name="index">index state.</param>
        </member>
        <member name="T:Engine.Renderer.Sprite.ISprite">
            <summary>
            ISprite class.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.Handle">
            <summary>
            Gets the OpenGL texture handle.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.Width">
            <summary>
            Gets the sprite width.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.Height">
            <summary>
            Gets the sprite height.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.TexX0">
            <summary>
            Gets the texture x0 position.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.TexX1">
            <summary>
            Gets the texture x1 position.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.TexY0">
            <summary>
            Gets the texture y0 position.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.TexY1">
            <summary>
            Gets the texture y1 position.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.ISprite.Color">
            <summary>
            Gets or sets the Color.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.ISprite.TimeElapsed(System.Single)">
            <summary>
            Before rendering the renderer runs this with the time attached.
            </summary>
            <param name="time">The elapsed time in seconds.</param>
        </member>
        <member name="T:Engine.Renderer.Sprite.Keyframe">
            <summary>
            Keyframe struct.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.Keyframe.#ctor(System.Int32,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Sprite.Keyframe"/> struct.
            </summary>
            <param name="x">the X position of the sprite in the tilesheet.</param>
            <param name="y">the Y position of the sprite in the tilesheet.</param>
            <param name="time">time it stays at this sprite.</param>
        </member>
        <member name="P:Engine.Renderer.Sprite.Keyframe.X">
            <summary>
            Gets the X position of the sprite in the tilesheet.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.Keyframe.Y">
            <summary>
            Gets the Y position of the sprite in the tilesheet.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.Keyframe.Time">
            <summary>
            Gets the time it stays at this sprite.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.Keyframe.RangeX(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Function to get a keyframe array with a set range.
            </summary>
            <param name="minX">min x.</param>
            <param name="maxX">max x.</param>
            <param name="y">y.</param>
            <param name="time">time in seconds.</param>
            <returns>an array.</returns>
        </member>
        <member name="M:Engine.Renderer.Sprite.Keyframe.RangeY(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Function to get a keyframe array with a set range.
            </summary>
            <param name="x">x.</param>
            <param name="minY">min y.</param>
            <param name="maxY">max y.</param>
            <param name="time">time in seconds.</param>
            <returns>an array.</returns>
        </member>
        <member name="T:Engine.Renderer.Sprite.Sprite">
            <summary>
            The Sprite class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.Sprite.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Sprite.Sprite"/> class.
            </summary>
            <param name="resource">The resource to bind as sprite.</param>
            <param name="flip">Set if flipped.</param>
        </member>
        <member name="M:Engine.Renderer.Sprite.Sprite.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Sprite.Sprite"/> class.
            </summary>
            <param name="resource">The resource to bind as sprite.</param>
            <param name="flip">Set if flipped.</param>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.Handle">
            <summary>
            Gets the OpenGL texture handle.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.Width">
            <summary>
            Gets the sprite width.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.Height">
            <summary>
            Gets the sprite height.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.TexX0">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.TexX1">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.TexY0">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.TexY1">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Sprite.Sprite.Color">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Sprite.Sprite.TimeElapsed(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.Sprite.SpriteRenderer">
            <summary>
            The SpriteRenderer class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.SpriteRenderer.#ctor(Engine.Renderer.Sprite.ISprite,Engine.GameObject.IRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Sprite.SpriteRenderer"/> class.
            </summary>
            <param name="sprite">The sprite to render.</param>
            <param name="position">The position to render the sprite.</param>
        </member>
        <member name="P:Engine.Renderer.Sprite.SpriteRenderer.Position">
            <summary>
            Gets the position to render the sprite.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Sprite.SpriteRenderer.Sprite">
            <summary>
            Gets the sprite to render.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Sprite.SpriteRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Sprite.SpriteRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Sprite.SpriteRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.Text.Font">
            <summary>
            Font class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Text.Font.#ctor(Engine.Renderer.Text.Parser.FontModel,Engine.Renderer.Sprite.Sprite)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Text.Font"/> class.
            </summary>
            <param name="model">Font model.</param>
            <param name="fontSheet">Spritesheet with handle of the font.</param>
        </member>
        <member name="P:Engine.Renderer.Text.Font.Model">
            <summary>
            Gets the font model.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Text.Font.FontSheet">
            <summary>
            Gets the font sheet.
            </summary>
        </member>
        <member name="T:Engine.Renderer.Text.Parser.FontModel">
            <summary>
            Font model class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Text.Parser.FontModel.#ctor(System.Collections.Generic.Dictionary{System.Int32,Engine.Renderer.Text.Parser.FontModel.FontModelCharacter})">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Text.Parser.FontModel"/> class.
            Font model initializer.
            </summary>
            <param name="characters">List of characters.</param>
        </member>
        <member name="P:Engine.Renderer.Text.Parser.FontModel.Characters">
            <summary>
            Gets the List of characters.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Text.Parser.FontModel.Parse(System.String)">
            <summary>
            Parse a file to an font model.
            </summary>
            <param name="stream">Stream to use.</param>
            <returns>Font model.</returns>
        </member>
        <member name="M:Engine.Renderer.Text.Parser.FontModel.Parse(System.IO.Stream)">
            <summary>
            Parse a file to an font model.
            </summary>
            <param name="stream">Stream to use.</param>
            <returns>Font model.</returns>
        </member>
        <member name="T:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter">
            <summary>
            Character model.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.Id">
            <summary>
            Character id.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.X">
            <summary>
            x position of char.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.Y">
            <summary>
            y position of char.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.Width">
            <summary>
            width of char.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.Height">
            <summary>
            height of char.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.XOffset">
            <summary>
            XOffset of char.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.YOffset">
            <summary>
            YOffset of char.
            </summary>
        </member>
        <member name="F:Engine.Renderer.Text.Parser.FontModel.FontModelCharacter.XAdvance">
            <summary>
            XAdvance of char.
            </summary>
        </member>
        <member name="T:Engine.Renderer.Text.TextRenderer">
            <summary>
            The text renderer class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Text.TextRenderer.#ctor(System.String,Engine.Renderer.Text.Font,OpenTK.Mathematics.Color4,Engine.GameObject.IRectangle,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Text.TextRenderer"/> class.
            </summary>
            <param name="text">The text to show.</param>
            <param name="font">The font to render it with.</param>
            <param name="color">The color to render it with.</param>
            <param name="position">Position of the text.</param>
            <param name="fontScale">Scale of the text.</param>
            <param name="worldCoordinates">Use world coordinates instead of absolute.</param>
        </member>
        <member name="P:Engine.Renderer.Text.TextRenderer.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Text.TextRenderer.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Text.TextRenderer.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Text.TextRenderer.Position">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Text.TextRenderer.FontScale">
            <summary>
            Gets or sets the font scale.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Text.TextRenderer.Hidden">
            <summary>
            Gets or sets a value indicating whether if hidden.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Text.TextRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Text.TextRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Text.TextRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.Tile.ITilesheet">
            <summary>
            ITilesheet class.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.Handle">
            <summary>
            Gets the handle id for the specific Tileset.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.AmountTileHeight">
            <summary>
            Gets the amount in height.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.AmountTileWidth">
            <summary>
            Gets the amount in width.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.TileSizeX">
            <summary>
            Gets the size of the tile in pixels.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.TileSizeY">
            <summary>
            Gets the size of the tile in pixels.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.TileTexSizeX">
            <summary>
            Gets the Tile texture size X.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.ITilesheet.TileTexSizeY">
            <summary>
            Gets the Tile texture size Y.
            </summary>
        </member>
        <member name="T:Engine.Renderer.Tile.Parser.TilemapParser">
            <summary>
            Helper class to parse Tilemap json files into models.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.Parser.TilemapParser.ParseTilemap(System.String)">
            <summary>
            Parses Tilemap json files into a Tilemap model.
            </summary>
            <param name="resource">The Tilemap json stream.</param>
            <returns>The Tilemap model.</returns>
        </member>
        <member name="M:Engine.Renderer.Tile.Parser.TilemapParser.ParseTilemap(System.IO.Stream)">
            <summary>
            Parses Tilemap json files into a Tilemap model.
            </summary>
            <param name="resource">The Tilemap json stream.</param>
            <returns>The Tilemap model.</returns>
        </member>
        <member name="M:Engine.Renderer.Tile.Parser.TilemapParser.GenerateCollisionMap(Engine.Renderer.Tile.Parser.TilemapLayerModel,System.Int32,System.Int32)">
            <summary>
            Generates an list of collisions from the tile layer.
            </summary>
            <param name="layer">The layer the list will be chosen from.</param>
            <param name="originX">Origin X.</param>
            <param name="originY">Origin Y.</param>
            <returns>a list of collisions.</returns>
        </member>
        <member name="T:Engine.Renderer.Tile.Tilemap">
            <summary>
            The Tilemap class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.Tilemap.#ctor(Engine.Renderer.Tile.Tilesheet,Engine.Renderer.Tile.Parser.TilemapModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Tile.Tilemap"/> class.
            </summary>
            <param name="tilesheet">The tileset the tilemap will use.</param>
            <param name="model">The model which the tilemap will be built.</param>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilemap.Layers">
            <summary>
            Gets the Layers.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilemap.Tilesheet">
            <summary>
            Gets the Tileset the tilemap is using.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilemap.Item(System.Int32)">
            <summary>
            Reference to this.
            </summary>
            <param name="layer">The layer to access to.</param>
            <returns>The specified Tilemap layer.</returns>
        </member>
        <member name="T:Engine.Renderer.Tile.TilemapLayer">
            <summary>
            The Tilemap class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.TilemapLayer.#ctor(Engine.Renderer.Tile.Tilesheet,Engine.Renderer.Tile.Parser.TilemapLayerModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Tile.TilemapLayer"/> class.
            </summary>
            <param name="tilesheet"> The tileset the tilemap is using.</param>
            <param name="model"> The model the tilemap bases on.</param>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.Width">
            <summary>
            Gets the tile amount in length.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.Height">
            <summary>
            Gets the tile amount in height.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.Tiles">
            <summary>
            Gets the tiles.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.Tilesheet">
            <summary>
            Gets or sets the tileset.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.TilemapModel">
            <summary>
            Gets the Tilemap model.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.TileTexSizeX">
            <summary>
            Gets the Tile texture size X.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.TileTexSizeY">
            <summary>
            Gets the Tile texture size Y.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapLayer.Item(System.Int32,System.Int32)">
            <summary>
            Makes content accessible.
            </summary>
            <param name="x">x position.</param>
            <param name="y">y position.</param>
            <returns>The handle for the tile.</returns>
        </member>
        <member name="T:Engine.Renderer.Tile.TilemapRenderer">
            <summary>
            The Tilemap renderer.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.TilemapRenderer.#ctor(Engine.Renderer.Tile.Tilemap,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Tile.TilemapRenderer"/> class.
            </summary>
            <param name="tilemap">The tilemap the renderer renders.</param>
            <param name="originX">X origin position.</param>
            <param name="originY">Y origin position.</param>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapRenderer.Tilemap">
            <summary>
            Gets the tilemap object.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapRenderer.OriginX">
            <summary>
            Gets the originx.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.TilemapRenderer.OriginY">
            <summary>
            Gets the origin y.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.TilemapRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Tile.TilemapRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Tile.TilemapRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.Tile.Tilesheet">
            <summary>
            The Tileset class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.Tilesheet.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Tile.Tilesheet"/> class.
            </summary>
            <param name="resource">The resource location.</param>
            <param name="tileSizeX">The X size of tiles in pixels.</param>
            <param name="tileSizeY">The Y size of tiles in pixels.</param>
        </member>
        <member name="M:Engine.Renderer.Tile.Tilesheet.#ctor(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Tile.Tilesheet"/> class.
            </summary>
            <param name="resource">The resource location.</param>
            <param name="tileSizeX">The X size of tiles in pixels.</param>
            <param name="tileSizeY">The Y size of tiles in pixels.</param>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.Handle">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.AmountTileHeight">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.AmountTileWidth">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.TileSizeX">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.TileSizeY">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.Tiles">
            <summary>
            Gets the Tiles with tex coordinates.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.CustomSprites">
            <summary>
            Gets or sets custom sprites.
            </summary>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.TileTexSizeX">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.Tilesheet.TileTexSizeY">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Tile.Tilesheet.SetCustomSprite(System.Int32,Engine.Renderer.Sprite.ISprite)">
            <summary>
            Sets a custom Sprite to an Sprite id.
            </summary>
            <param name="tileId">sprite id.</param>
            <param name="sprite">Sprite to replace with.</param>
        </member>
        <member name="T:Engine.Renderer.Tile.TileSprite">
            <summary>
            TileSprite class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.Tile.TileSprite.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.Tile.TileSprite"/> class.
            </summary>
            <param name="handle">Handle.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="texX0">TexX0.</param>
            <param name="texY0">TexY0.</param>
            <param name="texX1">TexX1.</param>
            <param name="texY1">TexY1.</param>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.Handle">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.Width">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.Height">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.TexX0">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.TexX1">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.TexY0">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.TexY1">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.Tile.TileSprite.Color">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.Tile.TileSprite.TimeElapsed(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.UiMatrixRenderer">
            <summary>
            Internal Renderer.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UiMatrixRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UiMatrixRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UiMatrixRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.UI.Graph.GraphDataSet">
            <summary>
            Graph data set class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphDataSet.#ctor(System.Int32,OpenTK.Mathematics.Color4)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.UI.Graph.GraphDataSet"/> class.
            </summary>
            <param name="dataPoints">Data points.</param>
            <param name="color">Color to draw with.</param>
        </member>
        <member name="P:Engine.Renderer.UI.Graph.GraphDataSet.Data">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:Engine.Renderer.UI.Graph.GraphDataSet.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphDataSet.AddData(System.Single)">
            <summary>
            Function to add a data point to the DataSet.
            </summary>
            <param name="data">Data point.</param>
        </member>
        <member name="T:Engine.Renderer.UI.Graph.GraphRenderer">
            <summary>
            Graph renderer class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphRenderer.#ctor(System.String,Engine.Renderer.Text.Font,Engine.GameObject.Rectangle,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.UI.Graph.GraphRenderer"/> class.
            </summary>
            <param name="title">Graph title.</param>
            <param name="font">Font of text.</param>
            <param name="bounds">Bounds of the graph.</param>
            <param name="min">Min y.</param>
            <param name="max">Max y.</param>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.Graph.GraphRenderer.AddDataSet(Engine.Renderer.UI.Graph.GraphDataSet)">
            <summary>
            Adds an dataset to the graph.
            </summary>
            <param name="dataSet">Dataset to add.</param>
        </member>
        <member name="T:Engine.Renderer.UI.Primitive.QuadRenderer">
            <summary>
            Quad Renderer class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.Primitive.QuadRenderer.#ctor(Engine.GameObject.IRectangle,OpenTK.Mathematics.Color4,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.UI.Primitive.QuadRenderer"/> class.
            </summary>
            <param name="bounds">Bounds of quad.</param>
            <param name="color">Color of quad.</param>
            <param name="filled">Quad filled.</param>
        </member>
        <member name="P:Engine.Renderer.UI.Primitive.QuadRenderer.Bounds">
            <summary>
            Gets or sets bounds.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.Primitive.QuadRenderer.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.Primitive.QuadRenderer.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.Primitive.QuadRenderer.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.UI.RelativeRectangle">
            <summary>
            Relative rectangle class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.RelativeRectangle.#ctor(Engine.GameObject.IRectangle,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.UI.RelativeRectangle"/> class.
            </summary>
            <param name="absolute">Absolute position.</param>
            <param name="minX">Relative minx.</param>
            <param name="minY">Relative miny.</param>
            <param name="sizeX">Relative sizex.</param>
            <param name="sizeY">Relative sizey.</param>
        </member>
        <member name="P:Engine.Renderer.UI.RelativeRectangle.SizeX">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.UI.RelativeRectangle.SizeY">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.UI.RelativeRectangle.MaxX">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.UI.RelativeRectangle.MaxY">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.UI.RelativeRectangle.MinX">
            <inheritdoc/>
        </member>
        <member name="P:Engine.Renderer.UI.RelativeRectangle.MinY">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Renderer.UI.UiAlignment">
            <summary>
            UI alignment class.
            </summary>
        </member>
        <member name="F:Engine.Renderer.UI.UiAlignment.Left">
            <summary>
            Float left.
            </summary>
        </member>
        <member name="F:Engine.Renderer.UI.UiAlignment.Right">
            <summary>
            Float right.
            </summary>
        </member>
        <member name="T:Engine.Renderer.UI.UiElement">
            <summary>
            UI element class.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.#ctor(Engine.GameObject.Rectangle,OpenTK.Mathematics.Color4,Engine.Renderer.Text.Font,Engine.Renderer.UI.UiAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Renderer.UI.UiElement"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="alignment">Alignment.</param>
        </member>
        <member name="P:Engine.Renderer.UI.UiElement.Renderers">
            <summary>
            Gets the Renderers.
            </summary>
        </member>
        <member name="P:Engine.Renderer.UI.UiElement.Hidden">
            <summary>
            Gets or sets a value indicating whether hidden.
            </summary>
        </member>
        <member name="P:Engine.Renderer.UI.UiElement.AbsoluteBounds">
            <summary>
            Gets the absolute bounds.
            </summary>
        </member>
        <member name="P:Engine.Renderer.UI.UiElement.Bounds">
            <summary>
            Gets or sets Bounds.
            </summary>
        </member>
        <member name="P:Engine.Renderer.UI.UiElement.Font">
            <summary>
            Gets or sets Font.
            </summary>
        </member>
        <member name="P:Engine.Renderer.UI.UiElement.BackgroundColor">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.OnRender(OpenTK.Windowing.Common.FrameEventArgs)">
            <summary>
            Renders before everything on ui.
            </summary>
            <param name="args">Frame args.</param>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.AddRenderElement(Engine.Renderer.IRenderer)">
            <summary>
            Adds an renderer to the ui element.
            </summary>
            <param name="renderer">Renderer element.</param>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.AddQuad(Engine.GameObject.Rectangle,OpenTK.Mathematics.Color4,System.Boolean)">
            <summary>
            Adds an quad to the ui element.
            </summary>
            <param name="rectangleBounds">Bounds of the quad.</param>
            <param name="color">Color of the quad.</param>
            <param name="filled">Quad filled.</param>
            <returns>The Quad element.</returns>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.AddGraph(System.String,Engine.GameObject.Rectangle,System.Single,System.Single)">
            <summary>
            Adds a graph to the ui element.
            </summary>
            <param name="title">Title of graph.</param>
            <param name="graphBounds">Bounds of graph.</param>
            <param name="min">Min.</param>
            <param name="max">Max.</param>
            <returns>Graph renderer object.</returns>
        </member>
        <member name="M:Engine.Renderer.UI.UiElement.AddText(System.String,OpenTK.Mathematics.Color4,Engine.GameObject.Rectangle,System.Single)">
            <summary>
            Add text to ui element.
            </summary>
            <param name="text">Text.</param>
            <param name="color">Color of text.</param>
            <param name="position">Position of text.</param>
            <param name="textScale">Scale of text.</param>
            <returns>Text renderer object.</returns>
        </member>
        <member name="T:Engine.Service.CollisionService">
            <summary>
            TestService class.
            </summary>
        </member>
        <member name="M:Engine.Service.CollisionService.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.CollisionService.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.CollisionService.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.CollisionService.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.CollisionService.GetCollosions(Engine.GameObject.GameObject)">
            <summary>
            Get all the IRectangle a GameObject collided with, this frame.
            </summary>
            <param name="gameObject">The GameObject, you want the collisions for.</param>
            <returns>A List of the Collisions.</returns>
        </member>
        <member name="M:Engine.Service.CollisionService.OnUpdatableDestroy">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.CollisionService.OnUpdatableCreate">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Service.ICollosionServiceSubscriber">
            <summary>
            Componts that want to get Collosions checked for, need to implement this interface.
            </summary>
        </member>
        <member name="T:Engine.Service.InputService">
            <summary>
            Input service class.
            </summary>
        </member>
        <member name="T:Engine.Service.InputService.Handler">
            <summary>
            The handler.
            </summary>
        </member>
        <member name="M:Engine.Service.InputService.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.InputService.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.InputService.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.InputService.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.InputService.OnUpdatableDestroy">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.InputService.OnUpdatableCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.InputService.Subscribe(OpenTK.Windowing.GraphicsLibraryFramework.Keys,Engine.Service.InputService.Handler)">
            <summary>
            Subscribe to an keydown event.
            </summary>
            <param name="key">key.</param>
            <param name="action">action.</param>
        </member>
        <member name="M:Engine.Service.InputService.Unsubscribe(OpenTK.Windowing.GraphicsLibraryFramework.Keys,Engine.Service.InputService.Handler)">
            <summary>
            Unsubscribe from an keydown event.
            </summary>
            <param name="key">key.</param>
            <param name="action">action.</param>
        </member>
        <member name="T:Engine.Service.IPhysicsServiceSubscriber">
            <summary>
            Componts must implemt this to get Updates from Physics Service.
            </summary>
        </member>
        <member name="M:Engine.Service.IPhysicsServiceSubscriber.UpdateForService(System.Single)">
            <summary>
            Methode the PhysicsService calls, to update the positon of the GameObject.
            </summary>
            <param name="frameTime">Time since last frame.</param>
        </member>
        <member name="T:Engine.Service.IService">
            <summary>
            IService class.
            </summary>
        </member>
        <member name="T:Engine.Service.ParticleService">
            <summary>
            Particle service.
            </summary>
        </member>
        <member name="M:Engine.Service.ParticleService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Service.ParticleService"/> class.
            </summary>
        </member>
        <member name="P:Engine.Service.ParticleService.Emitters">
            <summary>
            Gets the emitters.
            </summary>
        </member>
        <member name="M:Engine.Service.ParticleService.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.ParticleService.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.ParticleService.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.ParticleService.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.ParticleService.OnUpdatableDestroy">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.ParticleService.OnUpdatableCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.ParticleService.Emit(Engine.Renderer.Particle.ParticleEmitter,Engine.GameObject.IRectangle,System.Single)">
            <summary>
            Add an emitter.
            </summary>
            <param name="emitter">The emitter.</param>
            <param name="position">Position.</param>
            <param name="lifetime">The lifetime of the emitter. Set to 0 to disable deletion.</param>
        </member>
        <member name="M:Engine.Service.ParticleService.Remove(Engine.Renderer.Particle.ParticleEmitter)">
            <summary>
            Remove an emitter.
            </summary>
            <param name="emitter">The emitter.</param>
        </member>
        <member name="T:Engine.Service.PhysicsService">
            <summary>
            Moves every Component with a phsics Component.
            </summary>
        </member>
        <member name="M:Engine.Service.PhysicsService.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.PhysicsService.OnUpdatableCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.PhysicsService.OnUpdatableDestroy">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.PhysicsService.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.PhysicsService.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.PhysicsService.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Engine.Service.ServiceInfo">
            <summary>
            Service Info class.
            </summary>
        </member>
        <member name="M:Engine.Service.ServiceInfo.#ctor(System.String,Engine.Renderer.RenderLayer)">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Service.ServiceInfo"/> class.
            </summary>
            <param name="name">Name of the service.</param>
            <param name="renderLayer">Render layer of the service.</param>
        </member>
        <member name="P:Engine.Service.ServiceInfo.Name">
            <summary>
            Gets the name of the service.
            </summary>
        </member>
        <member name="P:Engine.Service.ServiceInfo.RenderLayer">
            <summary>
            Gets the Render layer the service wants to render on.
            </summary>
        </member>
        <member name="T:Engine.Service.TilemapService">
            <summary>
            Tilemap service class.
            </summary>
        </member>
        <member name="M:Engine.Service.TilemapService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Engine.Service.TilemapService"/> class.
            </summary>
        </member>
        <member name="M:Engine.Service.TilemapService.Render(OpenTK.Windowing.Common.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.TilemapService.Resize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.TilemapService.OnRendererCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.TilemapService.OnUpdate(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.TilemapService.OnUpdatableDestroy">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.TilemapService.OnUpdatableCreate">
            <inheritdoc/>
        </member>
        <member name="M:Engine.Service.TilemapService.AddTilemap(Engine.Renderer.Tile.Tilemap,OpenTK.Mathematics.Vector2i)">
            <summary>
            Add Tilemap to the renderer.
            </summary>
            <param name="tilemap">Tilemap.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:Engine.Service.TilemapService.SetOptimizationPoint(Engine.GameObject.IRectangle)">
            <summary>
            Sets the optimization point.
            </summary>
            <param name="rectangle">optimization point.</param>
        </member>
    </members>
</doc>
